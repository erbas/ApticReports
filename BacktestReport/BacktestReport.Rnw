\documentclass[nohyper,justified]{tufte-handout}
%\documentclass{article}
%\usepackage[absolute,showboxes]{textpos}
\usepackage[absolute]{textpos}
\usepackage{sidecap}
%\usepackage{color}
%\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\begin{document}


<<setup,eval=TRUE,echo=FALSE,results='hide',warning=FALSE,message=FALSE,error=FALSE>>=
#do requires and set up environment for reporting
require(quantmod)
require(PerformanceAnalytics)
require(xtable)

Sys.setenv(TZ = "Europe/London")
load("temp_pnl.RData")
@

<<date_prep,echo=FALSE,eval=TRUE>>=
# tidy up dates in daily pnl
enforce.daily <- function(ref,pnl) {
  if (nrow(pnl)==0) {
    return(xts(0,index(last(ref))))
  }
  idx1 <- index(first(pnl))
  idx2 <- index(last(pnl))
  idx <- paste(idx1,idx2,sep="/")
  pnl2 <- merge(ref,pnl,fill=0)[idx]
#   print("--- inside enforce.daily ---")
#   print(idx)
#   print(dim(pnl2))
#   print(head(pnl2))
  return(pnl2[,2])
}
pnl.daily2 <- enforce.daily(eod.xts,pnl.daily)
@

\begin{fullwidth}
\item{\Huge \Sexpr{strategy} : \Sexpr{ccy.pair} : \Sexpr{timeframe} : \Sexpr{strat.dir}}
\item{\Large Trades file: \verb+\Sexpr{filestem.out}+ }

\end{fullwidth}
\hrulefill 

\begin{textblock*}{118mm}(105mm,46mm)
\begin{figure}
\vspace{0pt}
<<Performance,echo=FALSE,eval=TRUE,fig.width=4,fig.height=5>>=
charts.PerformanceSummary(pnl.daily2,geometric=T,wealth.index=F,colorset=rich6equal,main=NULL,gap=0,xlab=NULL,lwd=1)
@
\end{figure}
\end{textblock*}

\begin{textblock*}{95mm}(10mm,138mm)
\begin{figure}
\vspace{0pt}
<<Performance2,echo=FALSE,eval=TRUE,fig.width=8,fig.height=3>>=
pnl.monthly <- period.apply(pnl.daily2,INDEX=endpoints(pnl.daily2,'months'),FUN=sum)
barplot(pnl.monthly*100,main="Monthly Returns (% AUM)")
@
\end{figure}
\end{textblock*}


\begin{textblock*}{80mm}(15mm,55mm)
\Large Summary Statistics
\normalsize
%\newline
\begin{figure}
\vspace{0pt}
<<drawdowns,echo=FALSE,warning=FALSE,error=FALSE,eval=TRUE,results='asis'>>=
DRAWDNS <- table.Drawdowns(pnl.daily2)
@
<<stats,echo=FALSE,warning=TRUE,eval=TRUE,results='asis'>>=
ABSRTN <- colSums(pnl.daily2)*100
ABSRTN.10 <- colSums(pnl.daily2["2010::"])*100
ABSRTN.11 <- colSums(pnl.daily2["2011::"])*100
ABSRTN.12 <- colSums(pnl.daily2["2012::"])*100
ABSRTN.13 <- colSums(pnl.daily2["2013::"])*100
ABSRTN.14 <- colSums(pnl.daily2["2014::"])*100
ABSRTN.14 <- colSums(pnl.daily2["2015::"])*100
CAR <- Return.annualized(pnl.daily2,scale=252,geometric=T)*100
VOL <- apply(pnl.daily2,2,sd)*sqrt(252)*100
MAXDRAW <- maxDrawdown(pnl.daily2,geometric=T)*100
SHARPE <- SharpeRatio.annualized(pnl.daily2,Rf=0.0025/252,scale=252,geometric=T)
SORTINO <- SortinoRatio(pnl.daily2)
SKEWNESS <- skewness(pnl.daily2,method="moment")
KURTOSIS <- kurtosis(pnl.daily2,method="moment")
OMEGA <- Omega(pnl.daily2,L=0)
KELLY <- KellyRatio(pnl.daily2,Rf=0)
WINLOSS <- apply(pnl.raw,2,function(x) length(x[x>0])/length(x))
n <- min(5,max(as.integer(row.names(DRAWDNS))))
DRAWDNS <- table.Drawdowns(pnl.daily2,top=n)
#dd.newedge <- table.Drawdowns(pnl.daily2[,2],top=n)
#RECOV <- c(DRAWDNS[1,"Recovery"],dd.newedge[1,"Recovery"])
#CONSEC <- apply(cbind(DRAWDNS[,"To Trough"],dd.newedge[,"To Trough"]),2,max)
RECOV <- DRAWDNS[1,"Recovery"]
runs <- rle(as.numeric(sign(pnl.raw)))
CONSEC <- max(runs$lengths[runs$values < 0])

statstable <- data.frame(rbind(ABSRTN,CAR,MAXDRAW,RECOV,CONSEC,VOL,SHARPE,WINLOSS,ABSRTN.10,ABSRTN.11,ABSRTN.12,ABSRTN.13,ABSRTN.14))
row.names(statstable) <- c("Total Return (% AUM)",
                           "Compounded Annual Return (%)",
                           "Max Drawdown (% AUM)",
                           "Days to Recovery",
                           "Max Consecutive Losing Trades",
                           "Annualized Volatility (%)",
                           "Sharpe Ratio",
                           "Win/Loss Ratio",
                           #"Sortino Ratio",
                           #"Skewness",
                           #"Kurtosis",
                           #"Omega Ratio",
                           "Total Return since 1 Jan 2010 (% AUM)",
                           "Total Return since 1 Jan 2011 (% AUM)",
                           "Total Return since 1 Jan 2012 (% AUM)",
                           "Total Return since 1 Jan 2013 (% AUM)",
                           "Total Return since 1 Jan 2014 (% AUM)")
print(xtable(statstable,align=c('l','r')), floating=FALSE, scalebox=0.7)
@
\end{figure}

\vspace{5mm}
\small Drawdown Length and Recovery Times
\normalsize
\begin{figure}
<<drawdn,echo=FALSE,eval=TRUE,results='asis'>>=
cn <- colnames(DRAWDNS)
cn[1] <- "Start"
cn[2] <- "Trough"
cn[3] <- "Recovery"
cn[4] <- "Max Drawdn (%)"
cn[5] <- "Duration"
cn[6] <- "Days to Trough"
cn[7] <- "Days to Recovery"
colnames(DRAWDNS) <- cn
row.names(DRAWDNS) <- NULL
DRAWDNS[,4] <- DRAWDNS[,4]*100
dts <- apply(DRAWDNS[,1:3],2,format,format="%d-%m-%Y")
#dts.frame <- data.frame(t(dts))
print(xtable(cbind(dts[,c(1:3)],DRAWDNS[,c(4,5)]),digits=c(0,0,0,0,2,0)),floating=FALSE, scalebox=0.7)
@
\end{figure}
\end{textblock*}


\begin{textblock*}{180mm}(15mm,170mm)
\begin{figure}
\vspace{0pt}
<<voletc,echo=FALSE,warning=TRUE,eval=TRUE,fig.width=8.5,fig.height=2.5>>=
layout(t(matrix(1:6,3,1)),respect=FALSE)
cex.m <- 1
cex.lg <- 0.7

# histogram of raw returns
dat <- pnl.raw/AUM*100
rangedata <- c(min(dat),max(dat))
xlim <- range(rangedata)
s <- seq(xlim[1], xlim[2], length = 500)
h <- hist(dat, breaks = 25, plot = FALSE)
h$density <- h$counts/sum(h$counts)*100
plot(h,freq=F,ylab="% Trades",main = "Histogram of Trade Returns", xlab="Returns (% AUM)",col="darkgrey",xlim=xlim)
fitted.normal <- dnorm(s, mean(dat), apply(dat,2,sd))
lines(s, fitted.normal*max(h$density)/max(fitted.normal), col = 4, lwd = 2)


# plot rolling volatility
n.window <- ifelse(nrow(pnl.daily2)>500,252,63)
vols <- rollapply(pnl.daily2,width=n.window,FUN=function(x) apply(x,2,sd),by.column=FALSE,align='right')
vols <- vols[endpoints(vols,'months')]*sqrt(n.window)*100
main.txt <- paste0("Volatility (rolling ",round(12*n.window/252)," month)")
plot.zoo(vols,plot.type='single',col=rich6equal,main=main.txt,xlab='Date',ylab='%',lwd=2)

# ------------------------
# timezone analysis
# ------------------------

# use time based subsetting
pnl.xts <- pnl.raw/AUM
pnl.london <- pnl.xts['T06:00/T17:59']
pnl.newyork <- pnl.xts['T18:00/T21:59']
pnl.asia <- pnl.xts['T22:00/T05:59']

tz.rtns <- c(sum(pnl.london),sum(pnl.newyork),sum(pnl.asia))*100
tz.str <- paste(format(tz.rtns,digits=2),"%",sep="")
labels <- c(paste("London",tz.str[1],sep="\n"),paste("New York",tz.str[2],sep="\n"),paste("Asia",tz.str[3],sep="\n"))
barplot(c(length(pnl.london),length(pnl.newyork),length(pnl.asia))/length(pnl.xts)*100,names.arg=labels,main="Trades and Returns by timezone",ylab="% Trades")


@
\end{figure}
\end{textblock*}

\begin{textblock*}{180mm}(15mm,220mm)
\begin{figure}
\vspace{0pt}

<<zonertns,echo=FALSE,warning=FALSE,error=FALSE,eval=TRUE,fig.width=8.5,fig.height=2.5>>=

# utility function to handle case of single pnl in timezone
my_plot.xts <- function(x,ref,...) {
  if (nrow(x) < 3) {
    dt.first <- xts(0,index(first(ref)))
    dt.last <- xts(coredata(last(x)),index(last(ref)))
    m1 <- xts(0,index(x[1]) - 1)
    p1 <- xts(coredata(last(x)),index(last(x)) + 1)
    y <- rbind(dt.first,m1,x,p1,dt.last)
#     print(y)
    plot(y,...)
  } else {
    plot(x,...)
  }
}

# being plotting
layout(t(matrix(1:6,3,1)),respect=FALSE)
cex.m <- 1
cex.lg <- 0.7

pnl.xts <- pnl.raw/AUM
pnl.london <- pnl.xts['T06:00/T17:59']
pnl.newyork <- pnl.xts['T18:00/T21:59']
pnl.asia <- pnl.xts['T22:00/T05:59']

pnl.london2 <- enforce.daily(eod.xts,pnl.london)
pnl.newyork2 <- enforce.daily(eod.xts,pnl.newyork)
pnl.asia2 <- enforce.daily(eod.xts,pnl.asia)

my_plot.xts(x=cumsum(pnl.london2)*100,ref=pnl.xts,main="Returns from London Trades",ylab="% AUM")
my_plot.xts(x=cumsum(pnl.newyork2)*100,ref=pnl.xts,main="Returns from New York Trades",ylab="% AUM")
my_plot.xts(x=cumsum(pnl.asia2)*100,ref=pnl.xts,main="Returns from Asia Trades",ylab="% AUM")
@
\end{figure}
\end{textblock*}



\end{document}